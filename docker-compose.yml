name: ecommerce-api
services:
  # --- DEVELOPMENT SERVICES ---
  db-dev:
    profiles: ['development']
    image: postgres:16-alpine
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB_DEV}
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    volumes:
      - db_data_dev:/var/lib/postgresql/data
    healthcheck:
      test:
        [
          'CMD-SHELL',
          'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB_DEV} -h localhost -p ${POSTGRES_PORT}',
        ]
      interval: 10s
      timeout: 5s
      retries: 5

  ecommerce-api-dev:
    profiles: ['development']
    image: ecommerce-api-dev:latest
    build: .
    environment:
      NODE_ENV: development
      BACKEND_PORT: ${BACKEND_PORT}
      DATABASE_URL: ${DATABASE_URL}
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN}
      ALLOWED_ORIGINS: ${ALLOWED_ORIGINS}
    ports:
      - '3000:3000'
    volumes:
      - .:/app
    command: npm run dev
    depends_on:
      - db-dev

  # --- PRODUCTION SERVICES ---
  db-prod:
    profiles: ['production']
    image: postgres:16-alpine
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB_PROD}
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    volumes:
      - db_data_prod:/var/lib/postgresql/data
    healthcheck:
      test:
        [
          'CMD-SHELL',
          'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB_PROD} -h localhost -p ${POSTGRES_PORT}',
        ]
      interval: 10s
      timeout: 5s
      retries: 5

  ecommerce-api-prod:
    profiles: ['production']
    image: ecommerce-api-prod:latest
    build: .
    environment:
      NODE_ENV: production
      BACKEND_PORT: ${BACKEND_PORT}
      DATABASE_URL: ${DATABASE_URL}
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN}
      ALLOWED_ORIGINS: ${ALLOWED_ORIGINS}
    ports:
      - '3000:3000'
    command: npm start
    depends_on:
      - db-prod

volumes:
  db_data_dev:
  db_data_prod:
